{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\colne rstp\\\\rtsp-stream-viewer\\\\frontend\\\\src\\\\videoplayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Hls from 'hls.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendUrl = 'http://localhost:8000';\nconst VideoPlayer = ({\n  streamId\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  useEffect(() => {\n    const video = videoRef.current;\n    if (!video || !streamId) return;\n    let hls = null;\n    if (Hls.isSupported()) {\n      hls = new Hls();\n      hls.loadSource(`${backendUrl}/media/streams/${streamId}/index.m3u8`);\n      hls.attachMedia(video);\n      hls.on(Hls.Events.MANIFEST_PARSED, () => {\n        video.play();\n      });\n\n      // Added error handler\n      hls.on(Hls.Events.ERROR, function (event, data) {\n        console.error('HLS error:', data);\n      });\n    } else if (video.canPlayType('application/vnd.apple.mpegurl')) {\n      video.src = `${backendUrl}/media/streams/${streamId}/index.m3u8`;\n      video.addEventListener('loadedmetadata', () => {\n        video.play();\n      });\n    }\n    return () => {\n      if (hls) {\n        hls.destroy();\n      }\n    };\n  }, [streamId]);\n\n  // Added red border for debugging visibility\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    ref: videoRef,\n    controls: true,\n    style: {\n      width: '100%',\n      maxWidth: '600px',\n      border: '1px solid red'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n};\n_s(VideoPlayer, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useEffect","useRef","Hls","jsxDEV","_jsxDEV","backendUrl","VideoPlayer","streamId","_s","videoRef","video","current","hls","isSupported","loadSource","attachMedia","on","Events","MANIFEST_PARSED","play","ERROR","event","data","console","error","canPlayType","src","addEventListener","destroy","ref","controls","style","width","maxWidth","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/colne rstp/rtsp-stream-viewer/frontend/src/videoplayer.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport Hls from 'hls.js';\r\nimport './App.css';\r\n\r\ninterface VideoPlayerProps {\r\n  streamId: string;\r\n}\r\n\r\nconst backendUrl = 'http://localhost:8000';\r\n\r\nconst VideoPlayer: React.FC<VideoPlayerProps> = ({ streamId }) => {\r\n  const videoRef = useRef<HTMLVideoElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    const video = videoRef.current;\r\n    if (!video || !streamId) return;\r\n\r\n    let hls: Hls | null = null;\r\n\r\n    if (Hls.isSupported()) {\r\n      hls = new Hls();\r\n      hls.loadSource(`${backendUrl}/media/streams/${streamId}/index.m3u8`);\r\n      hls.attachMedia(video);\r\n\r\n      hls.on(Hls.Events.MANIFEST_PARSED, () => {\r\n        video.play();\r\n      });\r\n\r\n      // Added error handler\r\n      hls.on(Hls.Events.ERROR, function (event, data) {\r\n        console.error('HLS error:', data);\r\n      });\r\n    } else if (video.canPlayType('application/vnd.apple.mpegurl')) {\r\n      video.src = `${backendUrl}/media/streams/${streamId}/index.m3u8`;\r\n\r\n      video.addEventListener('loadedmetadata', () => {\r\n        video.play();\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (hls) {\r\n        hls.destroy();\r\n      }\r\n    };\r\n  }, [streamId]);\r\n\r\n  // Added red border for debugging visibility\r\n  return <video ref={videoRef} controls style={{ width: '100%', maxWidth: '600px', border: '1px solid red' }} />;\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMnB,MAAMC,UAAU,GAAG,uBAAuB;AAE1C,MAAMC,WAAuC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChE,MAAMC,QAAQ,GAAGR,MAAM,CAA0B,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGD,QAAQ,CAACE,OAAO;IAC9B,IAAI,CAACD,KAAK,IAAI,CAACH,QAAQ,EAAE;IAEzB,IAAIK,GAAe,GAAG,IAAI;IAE1B,IAAIV,GAAG,CAACW,WAAW,CAAC,CAAC,EAAE;MACrBD,GAAG,GAAG,IAAIV,GAAG,CAAC,CAAC;MACfU,GAAG,CAACE,UAAU,CAAC,GAAGT,UAAU,kBAAkBE,QAAQ,aAAa,CAAC;MACpEK,GAAG,CAACG,WAAW,CAACL,KAAK,CAAC;MAEtBE,GAAG,CAACI,EAAE,CAACd,GAAG,CAACe,MAAM,CAACC,eAAe,EAAE,MAAM;QACvCR,KAAK,CAACS,IAAI,CAAC,CAAC;MACd,CAAC,CAAC;;MAEF;MACAP,GAAG,CAACI,EAAE,CAACd,GAAG,CAACe,MAAM,CAACG,KAAK,EAAE,UAAUC,KAAK,EAAEC,IAAI,EAAE;QAC9CC,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEF,IAAI,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIZ,KAAK,CAACe,WAAW,CAAC,+BAA+B,CAAC,EAAE;MAC7Df,KAAK,CAACgB,GAAG,GAAG,GAAGrB,UAAU,kBAAkBE,QAAQ,aAAa;MAEhEG,KAAK,CAACiB,gBAAgB,CAAC,gBAAgB,EAAE,MAAM;QAC7CjB,KAAK,CAACS,IAAI,CAAC,CAAC;MACd,CAAC,CAAC;IACJ;IAEA,OAAO,MAAM;MACX,IAAIP,GAAG,EAAE;QACPA,GAAG,CAACgB,OAAO,CAAC,CAAC;MACf;IACF,CAAC;EACH,CAAC,EAAE,CAACrB,QAAQ,CAAC,CAAC;;EAEd;EACA,oBAAOH,OAAA;IAAOyB,GAAG,EAAEpB,QAAS;IAACqB,QAAQ;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAgB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChH,CAAC;AAAC9B,EAAA,CAvCIF,WAAuC;AAAAiC,EAAA,GAAvCjC,WAAuC;AAyC7C,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}